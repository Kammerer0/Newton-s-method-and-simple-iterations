//Programs Name : Численные методы. Лабораторная работа 1. Задание 1.
//		*****************************************************
//Project Type	: Console Application
//Project Name	: Реализация метода Ньютона и метода простых итераций на с++
//File Name	: laba2_Pyatygo_2.1.cpp
//Programmer(s) : Пятыго М.И.
//Created	: 13.10.2023
//Comments	:

// Замечания программиста
/*
	проверку на сходимость в методе простых итераций (строка 123)
	можно реализовать короче, но я не смог вспомнить нужную функцию
*/

// Обозначения
/*
	x, x1 - искомые значения
	i, i1- итерационные параметры
	t - интервал, на котором ищется х
	e - модуль разницы между значением икса следующего и предыдущего
	e1 - то же, что и e, но для метода простых итераций
	h - параметр точности
	fun - заданная функция
	equiv - эквивалентная функция
	diff - первая производная к заданной функции
	diff2 - вторая производная к заданной функции
	diff3 - первая производная к эквивалентной функции
*/

//Подключаемые файлы
#include <iostream>
#include <cmath>

using namespace std;

//вводим решаемое нелинейное уравнение
double fun(double x)
{
	return pow(x, 3) - 2 * pow(x, 2) - 10 * x + 15;
}

//вводим первую производную от функции
double diff(double x)
{
	return 3 * pow(x, 2) - 4 * x - 10;
}

//вводим вторую производную от функции
double diff2(double x)
{
	return 6 * x - 4;
}

//вводим эквивалентную функцию для метода простых итераций
double equiv(double x)
{
	return (pow(x, 3) - 2 * pow(x, 2) + 15) / 10;
}

//вводим первую производную от эквивалентной функции
double diff3(double x)
{
	return (3 * pow(x, 2) - 4 * x) / 10;
}

int main()
{
	int i = 0, i1 = 0;
	double a, b{}, e = 1, e1 = 1;
	double x[100], x1[100], h;

	setlocale(0, "ru");
	// вводим интервал, на котором ищется х
	double t[2] = { 1, 2 };
	cout << "Введите необходимую точность расчета" << endl;
	cin >> h;
	cout << "Заданная функция: x^3 - 2x^2 - 10x + 15 =0 " << endl;

	// расчет

	//метод Ньютона

	//определяем нулевое приближение х0
	if (fun(t[0]) * diff2(t[0]) > 0)
	{
		x[0] = t[0];
	}
	else
	{
		x[0] = t[1];
	}

	cout << "----------------------------------- " << endl;
	cout << "Метод Ньютона" << endl;

	while (e > h)
	{
		// вычисляем х итый
		x[i + 1] = x[i] - (fun(x[i]) / diff(x[i]));

		//выводим полученный х
		cout << "Значение x= " << x[i + 1] << endl;
		cout << "Номер итерации i= " << i + 1 << endl;
		cout << "----------------------------------- " << endl;
		//проверка точности
		e = abs(x[i + 1] - x[i]);
		i++;
	}

	cout << "Ответ: " << x[i] << " номер итерации: " << i << " заданная точность h= " << h << "\n\n" << endl;

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	//метод простых итераций

	x1[0] = (t[0] + t[1]) / 2;
	cout << "Метод простых итераций" << endl;
	cout << "--------------------------------" << endl;
	cout << "эквивалентная функция: (x^3 - 2x^2 + 15)/10 \n" << endl;
	cout << x1[0] << endl;
	//проверяем выполнение условия сходимости
	if (abs(diff3(t[0])) > 0 and abs(diff3(t[1]) > 0))
	{
		cout << "Условие сходимости выполняется\n" << endl;

		//непосредственно итерации
		while (e1 > h)
		{
			//вычисляем х итый
			x1[i1 + 1] = equiv(x1[i1]);

			//выводим значения х
			cout << "Значение x1= " << x1[i1 + 1] << endl;
			cout << "Номер итерации i1= " << i1 + 1 << endl;
			cout << "--------------------------------" << endl;
			e1 = abs(x1[i1 + 1] - x1[i1]);
			i1++;
		}

		cout << "Ответ: " << x1[i1] << " номер итерации: " << i1 << " заданная точность h= " << h << endl;
	}
	else
	{
		cout << "Условие сходимости не выполняется" << endl;
	}

	return 0;
}
// конец файла laba2_Pyatygo_2.1.cpp ///////////////////////////////////////////////////////////////